@model LaChozaComercial.Models.DTOs.CreateUsuarioRequestDTO

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-body">
                    <h2 class="card-title text-center mb-4">Registro</h2>
                    @using (Html.BeginForm("Registro", "Usuario", FormMethod.Post))
                    {
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="mb-3">
                            @Html.LabelFor(u => u.userName, "Nombre de Usuario", new { @class = "form-label" })
                            @Html.TextBoxFor(u => u.userName, new { @class = "form-control", placeholder = "Ingrese su nombre de usuario", required = "required" })
                            @Html.ValidationMessageFor(u => u.userName, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(u => u.password, "Contraseña", new { @class = "form-label" })
                            @Html.PasswordFor(u => u.password, new { @class = "form-control", placeholder = "Ingrese su contraseña", required = "required" })
                            @Html.ValidationMessageFor(u => u.password, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(u => u.email, "Email", new { @class = "form-label" })
                            @Html.TextBoxFor(u => u.email, new { @class = "form-control", placeholder = "Ingrese su correo electrónico", required = "required" })
                            @Html.ValidationMessageFor(u => u.email, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(u => u.userType, "Tipo de Usuario", new { @class = "form-label" })
                            @Html.DropDownListFor(u => u.userType,
                                     new List<SelectListItem>
                        {
                        new SelectListItem { Text = "Vendedor", Value = "true" },
                        new SelectListItem { Text = "Cliente", Value = "false" }
                        }, "-- Seleccione su tipo de usuario --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(u => u.userType, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-grid gap-2 mt-4">
                            <button type="submit" class="btn btn-primary btn-lg">Registrarse</button>
                        </div>

                        @if (!string.IsNullOrEmpty(ViewBag.Error))
                        {
                            <div class="alert alert-danger mt-3 text-center" role="alert">
                                @Html.Raw(ViewBag.Error)
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="text-center mt-3">
                <p>¿Ya tienes una cuenta? <a href="@Url.Action("Login", "Usuario")" class="text-primary">Inicia sesión aquí</a></p>
            </div>
        </div>
    </div>
</div>

<style>
    .btn-primary {
        background-color: #003366; /* Azul oscuro */
        border-color: #003366;
    }

        .btn-primary:hover, .btn-primary:focus {
            background-color: #004080;
            border-color: #004080;
        }

    .shadow-lg {
        box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1), 0 4px 6px rgba(0, 0, 0, 0.05); /* Sombra leve */
    }
</style>
